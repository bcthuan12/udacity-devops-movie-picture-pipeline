name: Backend Continuous Integration
on:
  workflow_dispatch:
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

jobs:
  lint-job:
    name: LINT JOB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
          pip install flake8
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Lint
        working-directory: ./starter/backend
        run: |
          pipenv install
          pipenv run lint

  test-job:
    name: TEST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Test
        working-directory: ./starter/backend
        run: |
          pipenv install
          pipenv run test
  build-job:
    name: BUILD
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: ./starter/backend
          file: ./starter/backend/Dockerfile
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.BACKEND_REPO}}:latest
          load: true
          push: true
